{"version":3,"sources":["webpack:///./src/App.js","webpack:///./src/Counter.jsx","webpack:///./src/Running.js","webpack:///./src/index.js"],"names":["App","Component","runForever","Counter","props","state","count","newval","setState","loop","increment","iterationNumber","console","log","squared","num","setTimeout","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;IAEMA,G;;;;;;;;;;;;;6BACK;AACP,aACE,2DAAC,gDAAD,OADF;AAGD;;;;EALeC,+C;;AAQlBC,2DAAU;AAEKF,kEAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAEO,IAAMG,OAAb;AAAA;AAAA;AAAA;;AAEE,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iWAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,WAAK,EAAE;AADI,KAAb;AAHiB;AAMlB;;AARH;AAAA;AAAA,gCAUgB;AACV,UAAMC,MAAM,GAAG,KAAKF,KAAL,CAAWC,KAAX,GAAmB,CAAlC;AACA,WAAKE,QAAL,CAAc;AAAEF,aAAK,EAAEC;AAAT,OAAd;AACA,WAAKE,IAAL;AACD;AAdL;AAAA;AAAA,6BAgBa;AAAA;;AACP,aACE;AAAK,iBAAS,EAAC;AAAf,2BACiB,KAAKJ,KAAL,CAAWC,KAD5B,OAEE,wEACE;AAAQ,UAAE,EAAC,cAAX;AAA0B,eAAO,EAAG;AAAA,iBAAM,MAAI,CAACI,SAAL,EAAN;AAAA;AAApC,qBADF,MAFF,CADF;AAQD;AAzBL;AAAA;AAAA,2BA2BW;AACL,WAAK,IAAIC,eAAe,GAAG,CAA3B,EAA8BA,eAAe,GAAG,GAAhD,EAAqD,EAAEA,eAAvD,EAAwE;AACtEC,eAAO,CAACC,GAAR,+BAAmCF,eAAnC;AACA,YAAMG,OAAO,GAAGH,eAAe,GAAGA,eAAlC;AACAC,eAAO,CAACC,GAAR,6BAAiCF,eAAjC,uBAA6DG,OAA7D;AACD;AACF;AAjCL;;AAAA;AAAA,EAA6Bb,+CAA7B,E;;;;;;;;;;;;ACFA;AAAA;AAAA;AAEA,IAAIc,GAAG,GAAG,CAAV;AACO,SAASb,UAAT,GAAsB;AACzBc,YAAU,CAAC,YAAM;AACbD,OAAG;AACHb,cAAU;AACb,GAHS,EAGP,EAHO,CAAV;AAIH,C;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEAe,gDAAQ,CAACC,MAAT,CAAgB,2DAAC,4CAAD,OAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E","file":"out/main.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Counter } from './Counter';\r\nimport { runForever } from './Running';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Counter ></Counter>\r\n    );\r\n  }\r\n}\r\n\r\nrunForever();\r\n\r\nexport default App;\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 0\r\n    };\r\n  }\r\n\r\n    increment() {\r\n      const newval = this.state.count + 1 ;\r\n      this.setState({ count: newval });\r\n      this.loop();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"shopping-list\">\r\n          Click count = {this.state.count};\r\n          <div>\r\n            <button id=\"incrementBtn\" onClick={ () => this.increment() } >Increment</button> { }\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    loop() {\r\n      for (let iterationNumber = 1; iterationNumber < 200; ++iterationNumber) {\r\n        console.log(`starting iteration: ${iterationNumber}`);\r\n        const squared = iterationNumber * iterationNumber;\r\n        console.log(`ending iteration: ${iterationNumber} squared: ${squared}`);\r\n      }\r\n    }\r\n  }\r\n\r\n","\r\n// a script to keep running forever\r\n\r\nlet num = 0;\r\nexport function runForever() {\r\n    setTimeout(() => {\r\n        num++;\r\n        runForever();\r\n    }, 50);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}