{
  "name": "electron-debug",
  "displayName": "Debugger for Electron",
  "version": "20.1.0",
  "icon": "images/icon.png",
  "description": "%extension.description%",
  "repository": {
    "type": "git",
    "url": "https://github.com/Kode/vscode-electron-debug"
  },
  "publisher": "kodetech",
  "extensionKind": [
    "ui"
  ],
  "engines": {
    "vscode": "^1.41.0"
  },
  "categories": [
    "Debuggers"
  ],
  "keywords": [
    "multi-root ready"
  ],
  "license": "SEE LICENSE IN LICENSE.txt",
  "dependencies": {
    "vscode-chrome-debug-core": "^6.8.7",
    "vscode-debugadapter": "^1.37.1",
    "vscode-nls": "^4.1.1"
  },
  "devDependencies": {
    "@types/chai": "^4.1.7",
    "@types/chai-string": "^1.4.1",
    "@types/lodash": "^4.14.120",
    "@types/mocha": "^2.2.48",
    "@types/mockery": "^1.4.29",
    "@types/node": "^8.10.39",
    "@types/puppeteer": "^1.12.3",
    "@types/source-map": "^0.1.27",
    "@types/tmp": "0.0.32",
    "chai": "^4.2.0",
    "chai-string": "^1.5.0",
    "concurrently": "^3.1.0",
    "del": "^3.0.0",
    "event-stream": "^3.3.4",
    "get-port": "^5.0.0",
    "glob": "^7.1.1",
    "gulp": "^4.0.0",
    "gulp-sourcemaps": "^2.6.4",
    "gulp-tslint": "^8.1.3",
    "gulp-typescript": "^4.0.1",
    "gulp-util": "^3.0.8",
    "http-server": "0.9.0",
    "lodash": "^4.17.11",
    "minimist": "^1.2.0",
    "mocha": "^6.1.4",
    "mocha-junit-reporter": "^1.21.0",
    "mocha-multi-reporters": "^1.1.7",
    "mockery": "^1.7.0",
    "puppeteer": "^1.17.0",
    "request-promise-native": "^1.0.7",
    "source-map-support": "^0.5.11",
    "tmp": "0.0.31",
    "ts-loader": "^1.0.0",
    "tslint": "^5.7.0",
    "typemoq": "^2.1.0",
    "typescript": "^3.5.2",
    "vsce": "^1.71.0",
    "vscode": "^1.1.30",
    "vscode-chrome-debug-core-testsupport": "^4.0.0",
    "vscode-debugadapter-testsupport": "^1.33.0",
    "vscode-debugprotocol": "^1.37.0",
    "vscode-nls-dev": "^3.2.6"
  },
  "runtimeDependencies": [
    {
      "description": "Electron for Windows (x86)",
      "url": "https://github.com/electron/electron/releases/download/v8.2.0/electron-v8.2.0-win32-ia32.zip",
      "installPath": ".electron/8.2.0",
      "platforms": [
        "win32"
      ],
      "architectures": [
        "x86"
      ],
      "platformId": "win-x86"
    },
    {
      "description": "Electron for Windows (x64)",
      "url": "https://github.com/electron/electron/releases/download/v8.2.0/electron-v8.2.0-win32-x64.zip",
      "installPath": ".electron/8.2.0",
      "platforms": [
        "win32"
      ],
      "architectures": [
        "x86_64"
      ],
      "platformId": "win-x64"
    },
    {
      "description": "Electron for macOS",
      "url": "https://github.com/electron/electron/releases/download/v8.2.0/electron-v8.2.0-darwin-x64.zip",
      "installPath": ".electron/8.2.0",
      "platforms": [
        "darwin"
      ],
      "binaries": [
        "./Electron.app/Contents/MacOS/Electron",
        "./Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework",
        "./Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle",
        "./Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa",
        "./Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel",
        "./Electron.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper",
        "./Electron.app/Contents/Frameworks/Electron Helper EH.app/Contents/MacOS/Electron Helper EH",
        "./Electron.app/Contents/Frameworks/Electron Helper NP.app/Contents/MacOS/Electron Helper NP"
      ],
      "links": [
        "./Electron.app/Contents/Frameworks/Electron Framework.framework/Electron Framework",
        "./Electron.app/Contents/Frameworks/Electron Framework.framework/Libraries",
        "./Electron.app/Contents/Frameworks/Electron Framework.framework/Resources",
        "./Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/Current",
        "./Electron.app/Contents/Frameworks/Mantle.framework/Headers",
        "./Electron.app/Contents/Frameworks/Mantle.framework/Mantle",
        "./Electron.app/Contents/Frameworks/Mantle.framework/Modules",
        "./Electron.app/Contents/Frameworks/Mantle.framework/Resources",
        "./Electron.app/Contents/Frameworks/Mantle.framework/Versions/Current",
        "./Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Headers",
        "./Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Modules",
        "./Electron.app/Contents/Frameworks/ReactiveCocoa.framework/ReactiveCocoa",
        "./Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Resources",
        "./Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/Current",
        "./Electron.app/Contents/Frameworks/Squirrel.framework/Headers",
        "./Electron.app/Contents/Frameworks/Squirrel.framework/Modules",
        "./Electron.app/Contents/Frameworks/Squirrel.framework/Resources",
        "./Electron.app/Contents/Frameworks/Squirrel.framework/Squirrel",
        "./Electron.app/Contents/Frameworks/Squirrel.framework/Versions/Current"
      ],
      "platformId": "osx"
    },
    {
      "description": "Electron for Linux (x86)",
      "url": "https://github.com/electron/electron/releases/download/v8.2.0/electron-v8.2.0-linux-ia32.zip",
      "installPath": ".electron/8.2.0",
      "platforms": [
        "linux"
      ],
      "architectures": [
        "x86",
        "i686"
      ],
      "binaries": [
        "./electron"
      ],
      "platformId": "linux-x86"
    },
    {
      "description": "Electron for Linux (x64)",
      "url": "https://github.com/electron/electron/releases/download/v8.2.0/electron-v8.2.0-linux-x64.zip",
      "installPath": ".electron/8.2.0",
      "platforms": [
        "linux"
      ],
      "architectures": [
        "x86_64"
      ],
      "binaries": [
        "./electron"
      ],
      "platformId": "linux-x64"
    }
  ],
  "main": "./out/src/extension",
  "activationEvents": [
    "onDebugInitialConfigurations",
    "onDebugResolve:electron",
    "onCommand:extension.electron-debug.toggleSkippingFile",
    "onCommand:extension.electron-debug.toggleSmartStep"
  ],
  "scripts": {
    "build": "gulp build",
    "watch": "gulp watch",
    "start": "node out/src/chromeDebug.js --server=4712",
    "test": "mocha --exit --timeout 20000 -s 2000 -u tdd --colors \"./out/test/*.test.js\"",
    "intTest": "mocha --exit --timeout 20000 -s 3500 -u tdd --colors --reporter node_modules/vscode-chrome-debug-core-testsupport/out/loggingReporter.js ./out/test/int/*.test.js",
    "frameworkTest": "mocha --require source-map-support/register --exit --timeout 20000 -s 3500 -u tdd --colors --reporter mocha-multi-reporters --reporter-options configFile=test/int/testConfig.json ./out/test/int/framework/*.test.js",
    "allIntTest": "mocha --require source-map-support/register --exit --timeout 20000 -s 3500 -u tdd --colors --reporter mocha-multi-reporters --reporter-options configFile=test/int/testConfig.json \"./out/test/int/**/*.test.js\"",
    "lint": "gulp tslint",
    "vscode:prepublish": "gulp verify-no-linked-modules",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "patch": "npm version patch -m '%s'",
    "minor": "npm version minor -m '%s'",
    "major": "npm version major -m '%s'",
    "package": "gulp package"
  },
  "contributes": {
    "breakpoints": [
      {
        "language": "javascript"
      },
      {
        "language": "typescriptreact"
      },
      {
        "language": "javascriptreact"
      },
      {
        "language": "fsharp"
      },
      {
        "language": "haxe"
      }
    ],
    "configuration": {
      "properties": {
        "debug.chrome.useV3": {
          "type": "boolean",
          "description": "%debug.chrome.useV3.description%",
          "default": false
        }
      }
    },
    "debuggers": [
      {
        "type": "electron",
        "label": "Electron",
        "program": "./out/src/chromeDebug.js",
        "runtime": "node",
        "aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
        "languages": [
          "javascript",
          "typescript",
          "javascriptreact",
          "typescriptreact",
          "haxe"
        ],
        "configurationSnippets": [
          {
            "label": "Electron: Launch Workspace",
            "description": "Launch Electron in the workspace",
            "body": {
              "type": "electron",
              "request": "launch",
              "name": "Launch Electron here",
              "sourceMaps": true
            }
          },
          {
            "label": "Electron: Launch",
            "description": "Launch Electron",
            "body": {
              "type": "electron",
              "request": "launch",
              "name": "Launch Electron",
              "appDir": "${workspaceFolder}/somwehere/",
              "sourceMaps": true
            }
          }
        ],
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "port": {
                "type": "number",
                "description": "%chrome.port.description%",
                "default": 9222
              },
              "address": {
                "type": "string",
                "description": "%chrome.address.description%",
                "default": "127.0.0.1"
              },
              "file": {
                "type": "string",
                "description": "%chrome.file.description%",
                "default": "${workspaceFolder}/index.html"
              },
              "url": {
                "type": "string",
                "description": "%chrome.url.description%",
                "default": "http://localhost:8080"
              },
              "webRoot": {
                "type": "string",
                "description": "%chrome.webRoot.description%",
                "default": "${workspaceFolder}"
              },
              "pathMapping": {
                "type": "object",
                "description": "%chrome.pathMapping.description%",
                "default": {
                  "/": "${workspaceFolder}"
                }
              },
              "runtimeExecutable": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "%chrome.runtimeExecutable.description%",
                "default": null
              },
              "runtimeArgs": {
                "type": "array",
                "description": "%chrome.runtimeArgs.description%",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "env": {
                "type": "object",
                "description": "%chrome.env.description%",
                "default": {}
              },
              "cwd": {
                "type": "string",
                "description": "%chrome.cwd.description%",
                "default": null
              },
              "sourceMaps": {
                "type": "boolean",
                "description": "%chrome.sourceMaps.description%",
                "default": true
              },
              "diagnosticLogging": {
                "type": "boolean",
                "description": "%chrome.diagnosticLogging.description%",
                "default": true,
                "deprecationMessage": "'diagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "verboseDiagnosticLogging": {
                "type": "boolean",
                "description": "%chrome.verboseDiagnosticLogging.description%",
                "default": true,
                "deprecationMessage": "'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "trace": {
                "type": [
                  "boolean",
                  "string"
                ],
                "enum": [
                  "verbose",
                  true
                ],
                "default": true,
                "description": "%chrome.trace.description%"
              },
              "userDataDir": {
                "type": [
                  "string",
                  "boolean"
                ],
                "description": "%chrome.userDataDir.description%",
                "default": true
              },
              "sourceMapPathOverrides": {
                "type": "object",
                "description": "%chrome.sourceMapPathOverrides.description%",
                "default": {
                  "webpack:///./*": "${webRoot}/*",
                  "webpack:///src/*": "${webRoot}/*",
                  "webpack:///*": "*",
                  "webpack:///./~/*": "${webRoot}/node_modules/*",
                  "meteor://💻app/*": "${webRoot}/*"
                }
              },
              "smartStep": {
                "type": "boolean",
                "description": "%chrome.smartStep.description%",
                "default": true
              },
              "skipFiles": {
                "type": "array",
                "description": "%chrome.skipFiles.description%",
                "default": []
              },
              "timeout": {
                "type": "number",
                "description": "%chrome.timeout.description%",
                "default": 10000
              },
              "disableNetworkCache": {
                "type": "boolean",
                "description": "%chrome.disableNetworkCache.description%",
                "default": true
              },
              "urlFilter": {
                "type": "string",
                "description": "%chrome.urlFilter.description%",
                "default": ""
              },
              "showAsyncStacks": {
                "type": "boolean",
                "description": "%chrome.showAsyncStacks.description%",
                "default": true
              },
              "breakOnLoad": {
                "type": "boolean",
                "description": "%chrome.breakOnLoad.description%",
                "default": true
              },
              "breakOnLoadStrategy": {
                "type": "string",
                "enum": [
                  "instrument",
                  "regex"
                ],
                "enumDescriptions": [
                  "%chrome.breakOnLoadStrategy.instrument.description%",
                  "%chrome.breakOnLoadStrategy.regex.description%"
                ],
                "description": "%chrome.breakOnLoadStrategy.description%",
                "default": "instrument"
              },
              "targetTypes": {
                "type": [
                  "array",
                  "null"
                ],
                "description": "%chrome.targetTypes.description%",
                "default": [
                  "page"
                ]
              },
              "appDir": {
                "type": "string",
                "description": "%chrome.appDir.description%",
                "default": "${workspaceFolder}"
              }
            }
          },
          "attach": {
            "required": [
              "port"
            ],
            "properties": {
              "port": {
                "type": "number",
                "description": "%chrome.port.description%",
                "default": 9222
              },
              "address": {
                "type": "string",
                "description": "%chrome.address.description%",
                "default": "127.0.0.1"
              },
              "sourceMaps": {
                "type": "boolean",
                "description": "%chrome.sourceMaps.description%",
                "default": true
              },
              "diagnosticLogging": {
                "type": "boolean",
                "description": "%chrome.diagnosticLogging.description%",
                "default": true,
                "deprecationMessage": "'diagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "verboseDiagnosticLogging": {
                "type": "boolean",
                "description": "%chrome.verboseDiagnosticLogging.description%",
                "default": true,
                "deprecationMessage": "'verboseDiagnosticLogging' is deprecated. Use 'trace' instead."
              },
              "trace": {
                "type": [
                  "boolean",
                  "string"
                ],
                "enum": [
                  "verbose",
                  true
                ],
                "default": true,
                "description": "%chrome.trace.description%"
              },
              "url": {
                "type": "string",
                "description": "%chrome.url.description%",
                "default": "http://localhost:8080"
              },
              "webRoot": {
                "type": "string",
                "description": "%chrome.webRoot.description%",
                "default": "${workspaceFolder}"
              },
              "pathMapping": {
                "type": "object",
                "description": "%chrome.pathMapping.description%",
                "default": {}
              },
              "sourceMapPathOverrides": {
                "type": "object",
                "description": "%chrome.sourceMapPathOverrides.description%",
                "default": {}
              },
              "smartStep": {
                "type": "boolean",
                "description": "%chrome.smartStep.description%",
                "default": true
              },
              "skipFiles": {
                "type": "array",
                "description": "%chrome.skipFiles.description%",
                "default": []
              },
              "timeout": {
                "type": "number",
                "description": "%chrome.timeout.description%",
                "default": 10000
              },
              "disableNetworkCache": {
                "type": "boolean",
                "description": "%chrome.disableNetworkCache.description%",
                "default": true
              },
              "urlFilter": {
                "type": "string",
                "description": "%chrome.urlFilter.description%",
                "default": ""
              },
              "targetTypes": {
                "type": [
                  "array",
                  "null"
                ],
                "description": "%chrome.targetTypes.description%",
                "default": [
                  "page"
                ]
              },
              "showAsyncStacks": {
                "type": "boolean",
                "description": "%chrome.showAsyncStacks.description%",
                "default": true
              }
            }
          }
        }
      }
    ],
    "menus": {
      "debug/callstack/context": [
        {
          "command": "extension.electron-debug.toggleSkippingFile",
          "group": "navigation",
          "when": "inDebugMode && debugType == 'electron' && callStackItemType == 'stackFrame'"
        },
        {
          "command": "extension.electron-debug.toggleSmartStep",
          "group": "navigation",
          "when": "inDebugMode && debugType == 'electron' && callStackItemType == 'stackFrame'"
        }
      ]
    },
    "commands": [
      {
        "command": "extension.electron-debug.toggleSkippingFile",
        "title": "%chrome.toggleSkipping.title%"
      },
      {
        "command": "extension.electron-debug.toggleSmartStep",
        "title": "%chrome.toggleSmartStep.title%"
      }
    ],
    "keybindings": [
      {
        "command": "extension.node-debug.pickLoadedScript",
        "key": "ctrl+f4",
        "mac": "cmd+f4",
        "when": "debugType == 'electron'"
      }
    ]
  }
}
